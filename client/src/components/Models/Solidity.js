/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'

export function Model(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/solidity.gltf')
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" position={[0, 0, -1.49]} rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh name="Alpha_Joints" geometry={nodes.Alpha_Joints.geometry} material={materials.Alpha_Joints_MAT} skeleton={nodes.Alpha_Joints.skeleton} />
          <skinnedMesh name="Alpha_Surface" geometry={nodes.Alpha_Surface.geometry} material={materials.Alpha_Body_MAT} skeleton={nodes.Alpha_Surface.skeleton} />
        </group>
        <mesh name="Curve003" geometry={nodes.Curve003.geometry} material={materials['SVGMat.002']} position={[0, 0, -1.49]} />
        <mesh name="Curve004" geometry={nodes.Curve004.geometry} material={materials['SVGMat.003']} position={[0, 0, -1.49]} />
        <mesh name="Curve002" geometry={nodes.Curve002.geometry} material={materials['SVGMat.007']} position={[-0.18, 1.48, -1.37]} rotation={[1.61, 0.03, -0.01]} scale={1.82}>
          <mesh name="Curve_1" geometry={nodes.Curve_1.geometry} material={materials['SVGMat.007']} />
          <mesh name="Curve005" geometry={nodes.Curve005.geometry} material={materials['SVGMat.007']} />
          <mesh name="Curve006_1" geometry={nodes.Curve006_1.geometry} material={materials['SVGMat.007']} />
          <mesh name="Curve007" geometry={nodes.Curve007.geometry} material={materials['SVGMat.007']} />
          <mesh name="Curve008" geometry={nodes.Curve008.geometry} material={materials['SVGMat.007']} />
        </mesh>
      </group>
    </group>
  )
}

useGLTF.preload('/solidity.gltf')
