/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { Clock } from 'three'
import { useFrame } from '@react-three/fiber'

export function C(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/c.gltf')
  const { actions } = useAnimations(animations, group)
  console.log(actions)
  useEffect(() => {
    console.log(actions);
    actions.anime.play();
  });

  const delta =new Clock
  useFrame((clicked,delta)=>{
    group.current.rotation.y+=delta*0.5
  })
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.02}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh name="Alpha_Joints" geometry={nodes.Alpha_Joints.geometry} material={materials.Alpha_Joints_MAT} skeleton={nodes.Alpha_Joints.skeleton} />
          <skinnedMesh name="Alpha_Surface" geometry={nodes.Alpha_Surface.geometry} material={materials.Alpha_Body_MAT} skeleton={nodes.Alpha_Surface.skeleton} />
        </group>
        <mesh name="Curve003" geometry={nodes.Curve003.geometry} material={materials['SVGMat.002']} />
        <mesh name="Curve004" geometry={nodes.Curve004.geometry} material={materials['SVGMat.003']} />
        <mesh name="Curve001" geometry={nodes.Curve001.geometry} material={materials['SVGMat.001']} position={[0.04, 3.35, 0.25]} rotation={[1.57, 0, 0]} scale={-6.86}>
          <mesh name="Curve_1" geometry={nodes.Curve_1.geometry} material={materials.SVGMat} />
        </mesh>
      </group>
    </group>
  )
}

useGLTF.preload('/c.gltf')
